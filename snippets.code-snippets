{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"For Loop": {
		"scope": "javascript,typescript",
		"prefix": [ "for-const"],
		"body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"],
		"description": "A for loop."
	},
	"Export function": {
		"scope": "javascript,typescript",
	  "prefix": [ "export-funct"],
	  "body": ["export const ${1:exportname} = () => { ", 
		"\t", 
		"// [...] Code", 
		"\t", 
		"return ${2:stuff} ",
		"\t",
		"}"],
	  "description": "export body"
	},
	"Anonymous Arrow Function": {
		"scope": "javascript,typescript",
	  "prefix": [ "anonymous function","function anonymous"],
	  "body": ["() => { ","\t","${1:// [...] code } ","\t"," } "],
	  "description": "anonymous funct body"
	},
	"getElementById": {
		"scope": "javascript,typescript",
	  "prefix": [ "document-getElementById"],
	  "body": ["document.getElementById('${1:elementId}');"],
	  "description": "get Element Line"
	},
	"getElementsByClassName": {
		"scope": "javascript,typescript",
	  "prefix": [ "document-getElementsByClassName"],
	  "body": ["document.getElementsByClassName('${1:className}');"],
	  "description": "get Element Line"
	},
	"Console Log": {
		"scope": "javascript,typescript",
	  "prefix": [ "console.log"],
	  "body": ["console.log(${1:'${2:Stuff}'});"],
	  "description": "get Element Line"
	},
	"fontdefinitions": {
	  "scope": "css",
	  "prefix": [ "font-definitions"],
	  "body": [
		  "/* ----------------------------------- */",
		  "/* -------- Font Definitionen -------- */",
		  "font-family${1:: };             /* Schriftart */",
		  "font-size${2:: };               /* Schriftgröße, Schriftgrad */",
		  "font-weight${3:: };             /* Schriftstärke */",
		  "font-style${4:: };              /* Schriftschnitt */",
		  "/* line-height: ; */       /* Zeilenabstand */",
		  "/* font-variant: ; */      /* Versalien, Kapitälchen usw. */",
		  "/* text-decoration: ; */",
		  "/* text-shadow: ; */",
		  "/* text-rendering: ; */",
		  "/* paint-order: ; */       /* für SVGs, wichig bei z.B. Schriftkonturen */",
		  "\t",
		  "/* ------------------------------------------------------ */",
		  "/* -------- Verhalten des Textes im Blockelement -------- */",
		  "text-align${5:: };",
		  "/* text-justify: ; */      /* Darstellung bei Blocksatz (text-align: justify;) */",
		  "/* overflow-wrap: ; */",
		  "/* text-overflow: ;*/      /* Textfluss-Verhalten am Zeilenende */",
		  "/* white-space$: ;*/       /* Umbruchverhalten von Leerzeichen */ ", 
		  "/* word-break: ;*/         /* Umbruchverhalten ohne Trennstriche */",
		  "/* text-align-last: ; */",
		  "/* -- Worttrennungen mit Trennstrichen -- */",
		  "/* -ms-hyphens: ; */       /* Edge, Internetexplorer */ ",
		  "/* -webkit-hyphens: ; */   /* Safari */",
		  "/* hyphens: ; */",
		  "\t",
		  "/* ----------------------------------------------- */",
		  "/* -------- Fortgeschrittene Definitionen -------- */",
		  "/* letter-spacing: ; */    /* Spationierung */",
		  "/* text-indent: ; */       /* Einzug */",
		  "/* font-kerning: ; */      /* Kerning */",
		  "/* word-spacing: ; */      /* Ausschluss, Wortzwischenraum */",
		  "/* text-transform: ; */    /* Diverses. Großbuchstaben, Kleinbuchstaben, Laufweite, usw. */ ",
		  "/* font-stretch:; */       /* Skalierung der Glyphen */",
		  "/* text-size-adjust: ;*/   /* Schriftgrößenkorrekur auf Devices */ ",
		  "\t",
		  "/* -------------------------------------- */",
		  "/* -------- Weitere Definitionen -------- */",
		  "/* font-feature-settings: ; */",
		  "/* font-language-override: ; */",
		  "/* font-optical-sizing: ; */",
		  "/* font-size-adjust: ; */",
		  "/* font-smooth: ; */       /* anti-aliasing KEIN STANDARD */",
		  "/* font-synthesis: ; */    /* steuert z.B. Bold-Simulation von Browsern  */",
		  "/* font-variant-alternates: ; */",
		  "/* font-variant-caps: ; */",
		  "/* font-variant-east-asian: ; */",
		  "/* font-variant-ligatures: ; */",
		  "/* font-variant-numeric: ; */",
		  "/* font-variant-position: ; */",
		  "/* font-variation-settings: ; */",
		  "/* line-height-step: ; */  /* Rundet die Line-height auf. Erzeugt Grundlinienraster (???) */",
		  "/* line-break: ; */        /* Umbruchverhalten im Chinesischen, Japanischen und Koreanischen */",
		  "/* tab-size: ; */",
		  
		],
	  "description": "A bunch of Text Attributes"
	}

}